[gcode_macro Preheat_ABS]
gcode:
    BED_MESH_CLEAR
    CG28
    G1 X175 Y175 Z30 #Move to center
    M106 S128 #PCF 50%
    M190 S110 #Set and wait to heat bed to 110c
    M106 S150 #Hotend to 150c
    
    

[gcode_macro PRINT_START]
gcode:        
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|default(150)|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

    M190 S{bedtemp} ; set & wait for bed temp
    M109 S150
    M106 S0
    G28
    G90
    M106 S0                                                                              ; turn off part cooling fan (from heatsoak)
    BED_MESH_CLEAR                                                                       ; clear bed mesh
    QUAD_GANTRY_LEVEL                                                                    ; quad gantry level
    G28 Z
    BED_MESH_CALIBRATE
    SET_FAN_SPEED FAN=sb2040 SPEED=1
    M109 S{hotendtemp} ; set & wait for hotend temp
    G92 E0                                                                               ; reset Extruder
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    ADAPTIVE_PURGE
    #G1 X0 Y20 Z0.3 F19500.0                                                              ; move to start position
    #G1 X0 Y200.0 Z0.3 F1500.0 E15                                                        ; draw the first line
    G92 E0                                                                               ; reset Extruder
    G1 Z2.0 F3000                                                                        ; move Z Axis up

[gcode_macro PRINT_END]
gcode:                                         
    M400                                                                                 ; wait for buffer to clear
    G1 E-5.0 F400 ;Retract filament 5mm
    G92 E0                                                                               ; zero the extruder
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M104 S0                                                                              ; turn only the hotend off
    M107                                                                                 ; turn off part cooling fan
    G91                                                                                  ; relative positioning
    G1 Z10 F3000                                                                          ; move nozzle up 10mm
    G90                                                                                  ; absolute positioning
    G1 X175 Y330 F19500.0
    #G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0    ; park nozzle at rear
    TURN_OFF_HEATERS
    BED_MESH_CLEAR                                                                       ; clear bed mesh  
    SET_FAN_SPEED FAN=sb2040 SPEED=0.5
    #M84

[gcode_macro _PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro G32]
gcode:
    G28
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z
    PARK_BED

[gcode_macro QGL]
gcode:
    CG28
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL

[gcode_macro SAVE_Z_OFFSET_PROBE]
gcode:
    Z_OFFSET_APPLY_PROBE
    
[gcode_macro BMC]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park top rear left
[gcode_macro PARKREAR]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z25 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        PAUSE_BASE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        RESUME_BASE                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    CANCEL_PRINT_BASE

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

[gcode_macro Lights_100]
gcode:
    SET_PIN PIN=daylight VALUE=1.00

[gcode_macro Lights_Off]
gcode:
    SET_PIN PIN=daylight VALUE=0.00

[gcode_macro Lights_50]
gcode:
    SET_PIN PIN=daylight VALUE=0.50


[gcode_macro PID_HOTEND_250]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=250

[gcode_macro PID_BED_100]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=100